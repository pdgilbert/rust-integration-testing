Notes on various sensor crate issues as of Dec. 2024.

To simplify testing the examples *semi* use only the sensor crate and report results
with semihosting. This means the example does not need ssd or anything that would make
the example actually useable. 

At present there appears to be a run time bug in hal stm32f4xx affecting I2C.

The crate xca9548a provides multiplexing of sensors with the same address.
It is now converted to embedded-hal v1.0.0. That seems to mean that
crates for devices attached to the multiplexer also need to use eh-1.
(At least it is difficult if not impossible when they use older eh.
The problem is with trait bounds not being satisfied, which appears to come
from having two versions of eh.)

So, for multiplexing a sensor crates should:

 - Be using eh-1 and be no_std.
 - The binary should not be overly big, so other things can also be done on an MCU with limited flash.
 - Sensor intialization should return a Result so that it is posible to identify
     when some sensors are not attached.
 - Allow for software reset so individual sensors can be reset without a power cycle.
 - Syncronous (blocking) is necessary (at the moment because of rtic difficulties) but
     the feature of getting both sync and async from the same crate is nice.
 - Preferably the sensor should borrow rather than consume delay. If the delay is
   consumed then with multiplexing a large number of delays are used. This can
   be done with cortex_m::asm::delay but that adds unnecessary complication.
 - It would be nice if there were a release version rather than just github.


By above criteria:

AHT10 - There are not yet any eh-1 syncronous/blocking crates. 
      - Crate aht10-async (https://github.com/jneem/aht10-async)
            uses  embedded-hal-async = "1.0.0"  but is only async.
  
AHT20 - Crate aht20 used here as aht20-bl (https://github.com/blueluna/aht20) uses eh-1 but a Result not returned
        so it is difficult for xca9548a use. (All sensors must be present.) Also it consumes delay.  
        Example aht20-bl-semi works with stm32g4xx on stm32g474xE. 
        Example aht20-bl-semi compiles with stm32f4xx on stm32f411 but run fails.
        Example aht20-bl-semi compiles with stm32f1xx on bluepill but run fails.
        Example xca9548a-aht20-bl


      - Crate embedded-aht20  (https://github.com/ghismary/embedded-aht20) uses eh-1, and
        returns Result, and has feature option for sync or async. It consumes delay.
        Example aht20-em-semi works with stm32g4xx on stm32g474xE. 
        Example aht20-em-semi compiles with stm32f4xx on stm32f401 but run fails.
        Example xca9548a-aht20-em compiles with stm32f1xx, stm32f4xx, and stm32g474xE

      - Crate aht20-driver (https://github.com/anglerud/aht20-driver) uses eh-1, and
        does not consume delay. Result returned by .init method. It has an option to use
        Integer rather than Floating point. It is only sync.
        Example aht20-dr-semi works with stm32g4xx on stm32g474xE. 
        Example aht20-dr-semi compiles with stm32f4xx on stm32f401 but run fails.
        Example xca9548a-aht20-dr


AHT21 - There are not yet any eh-1 crates. 

SHT3embedded-sht3x   =  https://gitlab.com/ghislainmary/embedded-sht3x/

shtcx         =  { git = "https://github.com/dbrgn/shtcx-rs" } #  eh 1.0
#embedded-sht3x   =  https://gitlab.com/ghislainmary/embedded-sht3x/
embedded-hdc1080-rs = { git = "https://github.com/maxmarvil/hdc1080-embedded-rs" } # eh 0.2.6


Other notes:

#aht10  = { git = "https://github.com/heyitsanthony/aht10" }  #original but not being updated.
aht10   = { git = "https://github.com/andy31415/aht10", branch = "fix_status_check" } # not eh-1
#aht10-async           = { git = "https://github.com/jneem/aht10-async" } # aysnc only

#aht20           = { git = "https://github.com/mythmon/aht20" } # this does not appears to be actively updated
#aht20           = { git = "https://github.com/nim65s/aht20" }  # eh 0.2.6


//!  As of March 17, 2024 example xca9548a  compiled and runs on and ran blackpill stm32f401 both with and without --release
//!    using up to 4 AHT10s all on the first xca9548a.
//!    Testing with DisplaySize128x32 and then changed to DisplaySize128x64 rotated. 
//!    Works with USB dongle power, USB 5v battery power,  and 3.2v battery power,
//!    using 4 sensors on long wires.
